generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid String @id @default(uuid()) @db.Uuid
  name String 
  id String @unique
  password String

  schedule Schedule[] 
  friend1 Friend[] @relation(name: "user1")
  friend2 Friend[] @relation(name: "user2")
  
  friendSendRequests FriendRequest[] @relation(name: "sender")
  friendReceiveRequests FriendRequest[] @relation(name: "receiver")

  @@map("user")
}

model Friend {
  id Int @id @default(autoincrement())
  userUuid1 String @db.Uuid 
  userUuid2 String @db.Uuid 
  

  user1 User @relation(name: "user1", fields: [userUuid1], references: [uuid])
  user2 User @relation(name: "user2", fields: [userUuid2], references: [uuid])

  @@unique([userUuid1, userUuid2])
}

model Schedule {
  id Int @id @default(autoincrement())
  title String
  body String?
  startingDate DateTime @map("starting_date")
  endingDate DateTime? @map("ending_date")
  cycle Int?
  bool Boolean
  userId String @db.Uuid
  
  user User @relation(fields: [userId], references: [uuid])

  @@map("schedule")
}

model FriendRequest {
  id Int @id @default(autoincrement())
  message String
  senderUuid String @db.Uuid
  receiverUuid String @db.Uuid
  request Boolean @default(false)

  sender User @relation(name: "sender", fields: [senderUuid], references: [uuid])
  receiver User @relation(name: "receiver", fields: [receiverUuid], references: [uuid])

  @@map("friend_request")
}

